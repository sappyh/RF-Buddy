# auto-generated by grc.converter

id: sigmf_source
label: SigMF Source
category: '[SigMF]'

parameters:
-   id: filename
    label: File
    dtype: file_open
-   id: type
    label: Output Type
    dtype: enum
    options: [fc32, sc32, sc16, sc8, f64, f32, s64, s32, s16, s8]
    option_labels: [Complex Float 32, Complex Integer 32, Complex Integer 16, Complex
            Integer 8, Float 64, Float 32, Integer 64, Integer 32, Integer 16, Integer
            8]
    option_attributes:
        sigmf_type: [cf32, ci32, ci16, ci8, rf64, rf32, ri64, ri32, ri16, ri8]
    hide: part
-   id: repeat
    label: Repeat
    dtype: enum
    default: 'False'
    options: ['True', 'False']
    option_labels: ['Yes', 'No']

inputs:
-   domain: message
    id: command
    optional: true

outputs:
-   domain: stream
    dtype: ${ type }
-   domain: message
    id: meta
    optional: true

templates:
    imports: |-
        import gr_sigmf
        import sys
    make: gr_sigmf.source(${filename}, "${type.sigmf_type}" + ("_le" if sys.byteorder
        == "little" else "_be"), ${repeat})

documentation: |-
    Stream data from a SigMF recording.

file_format: 1
